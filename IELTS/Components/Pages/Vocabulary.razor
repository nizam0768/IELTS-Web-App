@page "/vocabulary"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using IELTS.EntityModels.Models
@using IELTS.EntityModels
@inject NavigationManager NavigationManager
@inject IDbContextFactory<IELTS.EntityModels.IELTSStoreDbContext> DbFactory
<div class="d-flex justify-content-center align-items-center">
    @if (wordMeanings is null)
    {
        <p><em>Loading...</em></p>
    }
    else if (wordMeanings.Count == 0)
    {
        <p><em>No words found.</em></p>
    }
    else
    {
        var word = wordMeanings[currentIndex];
        <div class="card border-success mb-3" style="width: 29rem; height: 15rem">
            @if (!showDefinition)
            {
                <div class="card-body">
                    <div class="text-end">
                        <label style="background-color:#dcdcdc">New Word</label>
                    </div>
                    <div class="text-center">
                        <h5 class="card-title">@word.Word</h5>
                        <p>(@word.PartofSpeech)</p>
                        <p>@word.Pronunciation</p>
                    </div>
                </div>
                <div class="card-footer border-success text-center" style="background-color:#dcdcdc">
                    <button style="display:inline" @onclick="ToggleCard" type="button">Press to see meaning <MudIcon Icon="@Icons.Material.TwoTone.ArrowCircleRight" Style="font-size: 2rem;" /></button>
                </div>
            }
            else
            {
                <div class="card-body">
                    <div>
                        <p class="card-title" style="color:red; display:inline">Definition:</p>
                        <p class="card-text" style="display:inline; font-size: 13px;">@word.Definition</p>
                    </div>
                    <div>
                        <p class="card-text" style="color:red; display:inline">Usage:</p>
                        <p class="card-text" style="display:inline; font-size: 13px;">@word.Usage</p>
                    </div>
                    <div>
                        <p class="card-text" style="color:red; display:inline">Related Words:</p>
                        <p class="card-text" style="display:inline; font-size: 13px;">@word.RelatedWords</p>
                    </div>
                    <div>
                        <p class="card-text" style="color:red; display:inline">More Info:</p>
                        <p class="card-text" style="display:inline; font-size: 13px;">@word.MoreInfo</p>
                    </div>
                </div>
                <div class="card-footer border-success text-center" style="background-color: #dcdcdc">
                    <button @onclick="ToggleCard" type="button"><MudIcon Icon="@Icons.Material.Filled.ChevronLeft" Style="font-size: 2rem;" /></button>
                    <button @onclick="NextWord" type="button">Next<MudIcon Icon="@Icons.Material.Filled.ChevronRight" Style="font-size: 2rem;" /></button>
                </div>
            }
        </div>
    }
</div>
@code {
    private bool showDefinition = false;
    private IELTSStoreDbContext context = default!;
    private List<WordMeaning>? wordMeanings;
    private int currentIndex = 0;

    private void ToggleCard()
    {
        showDefinition = !showDefinition;
    }

    private void NextWord()
    {
        showDefinition = false;
        if (wordMeanings is not null && wordMeanings.Count > 0)
        {
            currentIndex = (currentIndex + 1) % wordMeanings.Count;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        wordMeanings = await context.WordMeanings.ToListAsync();
        if (wordMeanings is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
